package com.project.zpo.Tables;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.io.Serializable;

/**
 * Entity class representing the attendance of a student on a specific class session.
 * Each attendance record consists of information about the student, class session, and attendance status.
 * The class implements the Serializable interface to enable object serialization.
 * <p>
 * In database, it is represented as association table of fields: [album, term_id, status]
 * with foreign keys from AttendanceId class.
 * This composite key consists of two foreign keys: student and term.
 * <p>
 * Constructors, getters and setters are generated by Lombok annotations.
 *
 * @see AttendanceId
 */
@Entity
@Table
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@IdClass(AttendanceId.class)
public class Attendance implements Serializable {

    /**
     * A field representing a student who belongs to the group that has class session on the selected date.
     * This field is part of the composite primary key along with the student field.
     * Relation many attendances to one student.
     * JPA mapping between an entity field and a column in the database table that stores a foreign key.
     * @see Student
     */
    @Id
    @ManyToOne
    @JoinColumn(name = "album", referencedColumnName = "album")
    private Student student;

    /**
     * A field representing the class date.
     * This field is part of the composite primary key along with the term field.
     * Relation many attendances to one term.
     * JPA mapping between an entity field and a column in the database table that stores a foreign key.
     * @see Term
     */
    @Id
    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "term_id", referencedColumnName = "id")
    private Term term;

    /**
     * Field representing the attendance status of the student in the class session.
     * (PRESENT, LATE, ABSENT, NOT_SET)
     * Cannot be null.
     */
    @Column(nullable = false)
    private String status;

    /**
     * Overridden toString method, returning a textual representation of the Attendance object.
     *
     * @return Textual representation of the Attendance object.
     */
    @Override
    public String toString() {
        return "Attendance{" +
                "student=" + student +
                ", term=" + term +
                ", status='" + status + '\'' +
                '}';
    }
}
