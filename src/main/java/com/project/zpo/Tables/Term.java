package com.project.zpo.Tables;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.List;

/**
 * Entity class representing a class term.
 * Each term has a unique identifier, date, and a list of attendances.
 * The class implements the Serializable interface to enable object serialization.
 * <p>
 * In database, it is represented as table of fields: [id, date]
 * with relation one-to-many with table attendances.
 * <p>
 * Constructors, getters and setters are generated by Lombok annotations.
 */
@Entity
@Table
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
public class Term implements Serializable {

    /**
     * Unique auto-incremented identifier for the term.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Date of the class term in format (yyyy-mm-dd).
     * Cannot be null.
     */
    @Column(nullable = false)
    private LocalDate date;

    /**
     * List of attendances for the term.
     * Relation one term to many attendances.
     * @see Attendance
     */
    @OneToMany(mappedBy = "term")
    @JsonIgnore
    private List<Attendance> attendances;
}
